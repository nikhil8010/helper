	******* disk scheduling FCFS *******

#include<stdio.h>#include<stdlib.h>
int main()
{
int i,n, head,total_head_movements = 0;
printf("Enter thetotalnumberofdisk blocks: ");
scanf("%d",&n);
int disk_queue[n];
printf("Enter thedisk request string: ");
for(i = 0;i < n; i++){
scanf("%d",&disk_queue[i]);
}
printf("Enter thecurrent head position: ");
scanf("%d",&head);
printf("The list of requests in theorder in which it is served:\n");
printf("%d ",head);
for(i = 0;i < n; i++){
total_head_movements += abs(disk_queue[i] - head);
head = disk_queue[i];
printf("%d ",head);
}
printf("\nTotal number of head movements: %d\n", total_head_movements);
return0;
}
Sample OP:-
Enterthetotal numberof disk blocks: 9
Enterthedisk request string: 55 58 39 18 90 160 150 38 184
Enterthecurrent head position: 50
Thelist ofrequests in the orderin which it is served:
50 55 58 39 18 90 160 150 38 184
Total numberof head movements:561


	******* MPI 1000 number *******
	

#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#include<mpi.h>
#defineARRAY_SIZE1000
int main(int argc,char** argv)
{
int rank,size;
int array[ARRAY_SIZE];
int i,sum =0,global_sum = 0;
//InitializeMPI
MPI_Init(&argc, &argv);
MPI_Comm_rank(MPI_COMM_WORLD,&rank);
MPI_Comm_size(MPI_COMM_WORLD,&size);
//Initializerandom numbergenerator
srand(time(NULL)+ rank);
//Fillarraywith randomnumbers
for(i = 0;i < ARRAY_SIZE; i++){
array[i] =rand()% 1000;
}
//Calculatelocal sumof even numbers
for(i = 0;i < ARRAY_SIZE; i++){
if (array[i] % 2 == 0) {
sum += array[i];
}
}
//Reducesum across allprocesses
MPI_Reduce(&sum, &global_sum,1,MPI_INT,MPI_SUM,0,MPI_COMM_WORLD);
if (rank == 0) {
printf("The sumof all evennumbers inthearrayis:%d\n",global_sum);
}
//FinalizeMPI
MPI_Finalize();
return0;
}
