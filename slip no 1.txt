#include<stdio.h>
intA[10][10],
M[10][10],N[10][10];
intAV[10],Safe[10],
Finish[10],R[10][10], nor,
nop;
voidAcceptData(intX[][10])
{
inti,j;
for(i=0;i<nop;i++)
{
printf("P%d\n"
,i);
for(j=0;j<nor;j++)
{
printf("%c:"
,65+j);scanf("%d"
,&X[i][j]);
}
}
}
voidAcceptAvailable()
{
inti;
for(i=0;i<nor;i++)
{
printf("%c:"
,65+i);
scanf("%d"
,&AV[i]);
}
}
voidAcceptRequest(intR[][10])

{
inti;
for(i=0;i<nor;i++)
{
printf("%c:"
,65+i);
scanf("%d"
,&R[i]);
}
}
voidDisplayData()
{
inti,j;printf("\n\tAllocation\t\tMax\t\tNeed\n");printf("\t");
for(i=0;i<3;i++)
{
for(j=0;j<nor;j++)
{
printf("%4c"
,65+j);
}
printf("\t");
}
for(i=0;i<nop;i++)
{
printf("\nP%d\t"
,i);
for(j=0;j<nor;j++)
{
printf("%4d"
,A[i][j]);
}
printf("\t");
for(j=0;j<nor;j++)
{
printf("%4d"
,M[i][j]);
}
printf("\t");
for(j=0;j<nor;j++)printf("%4d"
,N[i][j]);
}
printf("\nAvailable\n");for(j=0;j<nor;j++)
{
printf("%4d"
,AV[j]);
}
}
voidCalcNeed()
{
inti,j;
for(i=0;i<nop;i++)
{
for(j=0;j<nor;j++)
{
N[i][j]=M[i][j]-A[i][j];
}
}
}
intCheckNeed(intpno)
{
inti;
for(i=0;i<nor;i++)
{
if(N[pno][i]>AV[i])
{
return0;
}
}
return1;
}
intmain()
{
printf("\nEnterNumberofProcess:");scanf("%d"
,&nop);
printf("\nEnterNumberofResources:");scanf("%d"
,&nor);
printf("EnterAllocation\n");AcceptData(A);
printf("EnterMAXRequirement\n");AcceptData(M);
printf("EnterAvailability\n");AcceptAvailable();
CalcNeed();DisplayData();
}

    ********Q2 fcfs*************
#include<stdio.h>
#include<stdlib.h>
intmain()
{
intRQ[100],i,n,TotalHeadMoment=0,initial;
printf("EnterthenumberofRequests\n");
scanf("%d"
,&n);
printf("EntertheRequestssequence\n");
for(i=0;i<n;i++)
scanf("%d"
,&RQ[i]);
printf("Enterinitialheadposition\n");
scanf("%d"
,&initial);
// logic forFCFSdiskscheduling
for(i=0;i<n;i++)
{
TotalHeadMoment=TotalHeadMoment+abs(RQ[i]-initial);
initial=RQ[i];
}
printf("Total headmomentis%d"
,TotalHeadMoment);
return0;
}